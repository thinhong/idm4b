{
  "hash": "2b601bff267ec89a0d91727fa4e9f12e",
  "result": {
    "engine": "knitr",
    "markdown": "# Residual sum of squares\n\nRefer to @def-residual, the residual sum of squares (RSS) is the sum of the squares of residuals.\n\n$$RSS = \\sum_{i = 1}^{n}[y_i - f(x_i)]^2$$\n\n-   $y_i$: the observed value.\n-   $f(x_i)$: the predicted value.\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(deSolve)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\n```\n:::\n\n\nWe will use data collected during a H1N1 influenza outbreak in an elementary school in Pennsylvania [@cauchemez2011]. Let load the data and have a look.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- readRDS(\"data/flu_inc.rds\")\n\nggplot(df, aes(x = day, y = inc)) +\n  geom_point() +\n  labs(x = \"Day\", y = \"Incidence\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](rss_files/figure-html/unnamed-chunk-2-1.svg){width=100%}\n:::\n:::\n\n\nFor simplicity, we are going to make the following assumptions:\n\n- A closed population in the school.\n- Homogeneous mixing.\n- We ignore issues of missing data and censoring in the data (see [@cauchemez2011] for an analysis dealing with these problems).\n- The reported cases is the daily number of new symptomatic cases.\n\nLet reuse the deterministic SEIR model from @lst-seir-det:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nseir_mod <- function(beta, sigma, gamma, S0, E0, I0, R0, times) {\n  \n  sir_equations <- function(time, variables, parameters) {\n    with(as.list(c(variables, parameters)), {\n      dS <-   -beta * I * S\n      dE <-    beta * I * S - sigma * E\n      dI <-    sigma * E - gamma * I\n      dR <-    gamma * I\n      dCInc <- sigma * E\n      return(list(c(dS, dE, dI, dR, dCInc)))\n    })\n  }\n  \n  parameters_values <- c(beta = beta, sigma = sigma, gamma = gamma)\n  initial_values <- c(S = S0, E = E0, I = I0, R = R0, CInc = 0)\n  \n  out <- ode(initial_values, times, sir_equations, parameters_values)\n\n  out <- as.data.frame(out)\n  # Compute incidence from cumulative incidence\n  out$Inc <- c(I0, diff(out$CInc))\n  out$CInc <- NULL\n  out\n}\n```\n:::\n\n\nLet plug some initial values for the parameters and run the model.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npred <- seir_mod(beta = 0.004, sigma = 0.5, gamma = 0.5, S0 = 369, E0 = 0, I0 = 1, R0 = 0, times = df$day)\n\ndf_plot <- pivot_longer(pred, cols = S:Inc, names_to = \"comp\", values_to = \"n\")\n\nmy_palette <- brewer.pal(11, \"PuOr\")[c(10, 1, 4, 3, 8)]\n\nggplot(df_plot, aes(x = time, y = n, color = comp)) +\n  geom_point() + geom_line() +\n  scale_color_manual(values = my_palette, breaks = c(\"S\", \"E\", \"Inc\", \"I\", \"R\")) +\n  labs(color = NULL, y = NULL, x = \"Day\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](rss_files/figure-html/unnamed-chunk-4-1.svg){width=100%}\n:::\n:::\n\n\nNow just plot the incidence to compare with our data.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndf_plot <- pred[,c(\"time\", \"Inc\")]\nggplot(df_plot, aes(x = time, y = Inc)) +\n  geom_line(color = my_palette[3], linewidth = 1.1) +\n  geom_point(data = df, aes(x = day, y = inc)) +\n  labs(x = \"Day\", y = \"Incidence\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](rss_files/figure-html/unnamed-chunk-5-1.svg){width=100%}\n:::\n:::\n\n\nCalculate the residual sum of squares.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrss <- function(data, par) {\n  pred <- seir_mod(par[1], par[2], par[3], S0 = 369, E0 = 0, I0 = 1, R0 = 0, times = 1:length(data))\n  sum((data - pred$Inc)^2)\n}\n```\n:::\n\n\nThe `optim()` function needs 2 inputs:\n\n- `par`: a vector of initial values for the parameters to be optimized over.\n- `fn`: a function to be minimized.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseir_optim <- optim(par = c(0.004, 0.5, 0.5), fn = rss, data = df$inc)\nseir_optim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$par\n[1] 0.007666567 1.697472570 2.209581709\n\n$value\n[1] 147.9004\n\n$counts\nfunction gradient \n     197       NA \n\n$convergence\n[1] 0\n\n$message\nNULL\n```\n\n\n:::\n:::\n\n\nLet plug these values into the model and compare with our data.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npred <- seir_mod(beta = seir_optim$par[1], sigma = seir_optim$par[2], gamma = seir_optim$par[3], S0 = 369, E0 = 0, I0 = 1, R0 = 0, times = df$day)\ndf_plot <- pred[,c(\"time\", \"Inc\")]\nggplot(df_plot, aes(x = time, y = Inc)) +\n  geom_line(color = my_palette[3], linewidth = 1.1) +\n  geom_point(data = df, aes(x = day, y = inc)) +\n  labs(x = \"Day\", y = \"Incidence\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](rss_files/figure-html/unnamed-chunk-8-1.svg){width=100%}\n:::\n:::\n",
    "supporting": [
      "rss_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}