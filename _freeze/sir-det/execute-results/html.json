{
  "hash": "d424ad2e5ee199ce7343c3f45b50813f",
  "result": {
    "engine": "knitr",
    "markdown": "# SIR\n\n## Assumptions\n\n-   Well-mixed population, or homogeneous mixing (a single contact rate $\\beta$) [@becker2017].\n-   In the most basic form it considers a \"closed population\" without demographics (no births, deaths, or migration) [@keeling2011].\n-   Infectious disease properties are for a single pathogen [@becker2017].\n\n## Model\n\n$$\\frac{dS}{dt} = -\\beta SI = -\\lambda S$$ {#eq-sir-ds}\n\n$$\\frac{dI}{dt} = \\beta SI - \\gamma I = \\lambda S - \\gamma I$$ {#eq-sir-di}\n\n$$\\frac{dR}{dt} = \\gamma I$$ {#eq-sir-dr}\n\n-   $\\beta$: effective contact rate.\n-   $\\gamma$: removal rate.\n-   $\\beta I = \\lambda$: the rate from S to I is called **force of infection**.\n\n## Code\n\n### Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(deSolve)\nlibrary(tidyr)\nlibrary(bbmle)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(patchwork)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# sir_1() returns a data frame consists S, I, R, Inc values by time\nsir_1 <- function(beta, gamma, S0, I0, R0, times) {\n  \n  sir_equations <- function(time, variables, parameters) {\n    with(as.list(c(variables, parameters)), {\n      dS <- -beta * I * S\n      dI <-  beta * I * S - gamma * I\n      dR <-  gamma * I\n      return(list(c(dS, dI, dR)))\n    })\n  }\n  \n  parameters_values <- c(beta = beta, gamma = gamma)\n  initial_values <- c(S = S0, I = I0, R = R0)\n  \n  out <- ode(initial_values, times, sir_equations, parameters_values)\n\n  out <- as.data.frame(out)\n  # Compute incidence\n  out$Inc <- c(0, -diff(out$S))\n  out\n}\n```\n:::\n\n\n::: {.callout-important}\nWhen fitting real data:\n\n-   **Prevalence**: use the **I compartment**.\n-   **Incidence**: new cases are individuals moving out of S.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npred <- sir_1(beta = 0.004, gamma = 0.5, S0 = 999, I0 = 1, R0 = 0, times = 0:13)\n\ndf_plot <- pivot_longer(pred, cols = S:Inc, names_to = \"comp\", values_to = \"n\")\n\nggplot(df_plot, aes(x = time, y = n, color = comp)) +\n  geom_point() + geom_line() +\n  scale_color_brewer(palette = \"PuOr\", breaks = c(\"S\", \"Inc\", \"I\", \"R\")) +\n  labs(color = NULL) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](sir-det_files/figure-html/unnamed-chunk-3-1.svg){width=100%}\n:::\n:::\n\n\n- Normally, the time to peak of incidence is earlier than prevalence. \n\n## Sensitivity analysis\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsir_sa <- function(vals, parm, outcome, times, init_beta = 0.004, init_gamma = 0.5) {\n  pick_comp <- ifelse(outcome == \"prev\", \"I\", \"Inc\")\n  plot_lab <- ifelse(outcome == \"prev\", \"prevalence\", \"incidence\")\n  symb <- ifelse(parm == \"beta\", \"\\u03b2\", \"\\u03b3\")\n  l <- list()\n  for(i in 1:length(vals)) {\n    if (parm == \"beta\") {\n      pred <- sir_1(beta = vals[i], gamma = init_gamma, S0 = 999, I0 = 1, R0 = 0, times = times)[, c(\"time\", pick_comp)]\n    } else {\n      pred <- sir_1(beta = init_beta, gamma = vals[i], S0 = 999, I0 = 1, R0 = 0, times = times)[, c(\"time\", pick_comp)]\n    }\n    pred$comp <- paste0(pick_comp, i)\n    colnames(pred) <- c(\"time\", \"n\", \"comp\")\n    l[[i]] <- pred\n  }\n  # Bind this list into a data frame\n  df_plot <- Reduce(rbind, l)\n  # Set level I1 < I2 < I3 < I4 < I5 according to the increase of beta values\n  df_plot$comp <- factor(df_plot$comp, levels = c(paste0(pick_comp, 1:length(vals))))\n  my_palette <- brewer.pal(9, \"Blues\")[(9-length(vals)+1):9]\n  ggplot() + \n  # Results of different values\n    geom_point(data = df_plot, aes(x = time, y = n, color = comp)) + \n    geom_line(data = df_plot, aes(x = time, y = n, color = comp)) +\n    scale_color_manual(values = my_palette, labels = c(paste0(symb, \" = \", vals))) +\n    labs(color = NULL, y = plot_lab) +\n    theme_minimal()\n}\n```\n:::\n\n\n### Effective contact rate $\\beta$\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nvals <- seq(0.001, 0.006, 0.001)\n\np1 <- sir_sa(vals = vals, parm = \"beta\", outcome = \"prev\", times = 0:13) + labs(x = NULL)\np2 <- sir_sa(vals = vals, parm = \"beta\", outcome = \"inc\", times = 0:13)\n\np1 / p2 + plot_layout(guides = \"collect\") & theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](sir-det_files/figure-html/unnamed-chunk-5-1.svg){width=100%}\n:::\n:::\n\n\n### Recovery rate $\\gamma$\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nvals <- seq(0.3, 0.8, 0.1)\n\np1 <- sir_sa(vals = vals, parm = \"gamma\", outcome = \"prev\", times = 0:13) + labs(x = NULL)\np2 <- sir_sa(vals = vals, parm = \"gamma\", outcome = \"inc\", times = 0:13)\n\np1 / p2 + plot_layout(guides = \"collect\") & theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](sir-det_files/figure-html/unnamed-chunk-6-1.svg){width=100%}\n:::\n:::\n\n\nWhen $\\gamma$ increase, patients recover faster:\n\n- Outbreak size decrease: since patients recover faster, they have **less time to infect** susceptible individuals.\n- Time until peak remain the same. \n\nLoad the flu data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflu <- readRDS(\"data/flu.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(flu)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| time| prev|\n|----:|----:|\n|    0|    1|\n|    1|    6|\n|    2|   26|\n|    3|   73|\n|    4|  222|\n|    5|  293|\n\n</div>\n:::\n:::\n\n\nNow we run the SIR model, and compare predictions with the observed flu prevalence data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred <- sir_1(beta = 0.004, gamma = 0.5, S0 = 999, I0 = 1, R0 = 0, times = flu$time)\n\ndf <- merge(x = pred, y = flu, by = \"time\")\ndf <- df[,c(\"time\", \"I\", \"prev\")]\n```\n:::\n\n\nBetter off seeing the comparison on a plot.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# df_plot <- pivot_longer(df, cols = all_of(c(\"I\", \"prev\")), names_to = \"comp\", values_to = \"n\")\n# df_plot$comp <- factor(df_plot$comp, levels = c(\"prev\", \"I\"))\n# \n# ggplot(df_plot, aes(x = time, y = n, color = comp)) +\n#   geom_point() + geom_line() +\n#   scale_color_hue(labels = c(\"Prevalence\", \"Prediction\")) +\n#   labs(color = NULL) +\n#   theme_light() +\n#   theme(legend.position = \"bottom\")\n```\n:::\n\n\nLet have a look at this flu data. This is a very special data as it reports the flu **prevalence**. Usually, case notification data reports **incidence**.\n\n## Corollaries\n\n### The threshold phenomenon\n\nFrom @eq-sir-di:\n\n$$\\frac{dI}{dt} = \\beta SI - \\gamma I = I(\\beta S - \\gamma)$$\n\nThe infection \"dies out\" when:\n\n$$\\frac{dI}{dt} < 0 \\Leftrightarrow \\beta S - \\gamma < 0 \\Leftrightarrow S < \\frac{\\gamma}{\\beta}$$\n\n### Epidemic burnout\n\nDivide @eq-sir-ds by @eq-sir-dr:\n\n$$\\frac{dS}{dR} = \\frac{-\\beta S I}{\\gamma I} = -\\frac{\\beta}{\\gamma} S$$\n\nUpon integrating with respect to R, we obtain:\n\n$$S(t) = S(0)e^{-\\frac{\\beta}{\\gamma} R(t)}$$\n\nGiven that $e^x > 0 \\quad \\forall x$, therefore $S(t) > 0$ there will always be some susceptibles in the population who escape infection, leading to an important counter-intuitive conclusion from this model:\n\n> The chain of transmission eventually breaks due to the decline in infectives, not due to a complete lack of susceptibles.\n\n## Poisson distribution\n\nPoisson distribution is a **discrete probability distribution** that expresses probability of a given **number of events** occurring **in a fixed interval of time**[^sir-det-1].\n\n[^sir-det-1]: Wikipedia <https://en.wikipedia.org/wiki/Poisson_distribution>\n\nSuitable to use because here we are fitting a number of prev occurring in this period.\n",
    "supporting": [
      "sir-det_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}