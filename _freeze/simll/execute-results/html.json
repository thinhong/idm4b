{
  "hash": "617fb01f1491c2d32886d55ebb118ff6",
  "result": {
    "engine": "knitr",
    "markdown": "# Simulate line list\n\n::: {.callout-note appearance=\"simple\"}\nDownload the simulated data here:\n\n\n{{< downloadthis data/linelist.rds dname=\"linelist\" label=\"linelist.rds\" type=light >}}\n\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(simulist)\nlibrary(epiparameter)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(sf)\n```\n:::\n\n\nSet the distribution for all parameters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncontact_distribution <- epiparameter::epidist(\n  disease = \"COVID-19\", \n  epi_dist = \"contact distribution\", \n  prob_distribution = \"pois\", \n  prob_distribution_params = c(mean = 2)\n)\n\ninfectious_period <- epiparameter::epidist(\n  disease = \"COVID-19\",\n  epi_dist = \"infectious period\",\n  prob_distribution = \"gamma\",\n  prob_distribution_params = c(shape = 3, scale = 2)\n)\n\nonset_to_hosp <- epiparameter::epidist_db(\n  disease = \"COVID-19\",\n  epi_dist = \"onset to hospitalisation\",\n  single_epidist = TRUE\n)\n\nonset_to_death <- epiparameter::epidist_db(\n  disease = \"COVID-19\",\n  epi_dist = \"onset to death\",\n  single_epidist = TRUE\n)\n```\n:::\n\n\nWe create two overlapping outbreaks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First peak\nset.seed(1)\np1 <- sim_linelist(\n  contact_distribution = contact_distribution,\n  infectious_period = infectious_period,\n  onset_to_hosp = onset_to_hosp,\n  onset_to_death = onset_to_death,\n  outbreak_size = c(1000, 1500),\n  hosp_risk = 0.2,\n  hosp_death_risk = 0.2,\n  anonymise = T,\n  population_age = c(0, 25),\n  outbreak_start_date = as.Date(\"2023-01-01\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Number of cases exceeds maximum outbreak size. \nReturning data early with 1513 cases and 2946 total contacts (including cases).\n```\n\n\n:::\n\n```{.r .cell-code}\n# Second peak\nset.seed(17)\np2 <- sim_linelist(\n  contact_distribution = contact_distribution,\n  infectious_period = infectious_period,\n  onset_to_hosp = onset_to_hosp,\n  onset_to_death = onset_to_death,\n  outbreak_size = c(1000, 1200),\n  hosp_risk = 0.2,\n  hosp_death_risk = 0.2,\n  anonymise = T,\n  population_age = c(3, 35),\n  outbreak_start_date = as.Date(\"2023-05-01\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Number of cases exceeds maximum outbreak size. \nReturning data early with 1249 cases and 2417 total contacts (including cases).\n```\n\n\n:::\n:::\n\n\nAdd the district of residence.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 22 districts in HCMC\ndistricts <- c(\"Cu Chi\", \"Hoc Mon\", \"Quan 12\", \"Go Vap\", \"Binh Chanh\", \"Binh Tan\", \"Tan Phu\", \"Tan Binh\", \"Phu Nhuan\", \"Binh Thanh\", \"Thu Duc\", \"Quan 6\", \"Quan 11\", \"Quan 10\", \"Quan 3\", \"Quan 1\", \"Quan 5\", \"Can Gio\", \"Nha Be\", \"Quan 4\", \"Quan 8\", \"Quan 7\")\n\n# Let have the first peak in the west, the second peak in the south\nsampling_space <- round(rnorm(10000, mean = 6, sd = 6))\np1$district <- sample(sampling_space[sampling_space >= 1 & sampling_space <= 22], nrow(p1))\np1$district <- districts[p1$district]\n\nsampling_space <- round(rnorm(10000, mean = 15, sd = 5))\np2$district <- sample(sampling_space[sampling_space >= 1 & sampling_space <= 22], nrow(p2))\np2$district <- districts[p2$district]\n\np1$outbreak <- \"1st outbreak\"\np2$outbreak <- \"2nd outbreak\"\n\ndf <- rbind(p1, p2)\n```\n:::\n\n\nLet see the spatial distribution of the first and second peak.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmap_p <- \"data/gadm41_hcmc_district.rds\"\nmapdt <- readRDS(map_p)\nmapdt <- mapdt[,c(1,3)]\ncolnames(mapdt) <- c(\"district\", \"geom\")\nmapdt$district <- stringi::stri_trans_general(mapdt$district, \"latin-ascii\")\n\ndf_plot <- df |> \n  count(outbreak, district) |> \n  as.data.frame() |> \n  complete(outbreak, district = unique(mapdt$district)) |> \n  left_join(mapdt, by = \"district\") |> \n  st_as_sf()\n\nggplot(df_plot) +\n  geom_sf(aes(fill = n)) +\n  scale_fill_viridis_c(na.value=\"white\") +\n  facet_wrap(~ outbreak) +\n  theme_light() +\n  theme(\n    axis.line = element_blank(),\n    axis.title = element_blank(),\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](simll_files/figure-html/unnamed-chunk-5-1.svg){width=100%}\n:::\n:::\n\n\nHave a look at the final data.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Clean the date columns and remove non important columns\ndf <- df |> mutate_if(is.Date, ymd) |> select(-ct_value, -case_type, -outbreak)\n\ndf_plot <- df |> \n  count(date_onset)\n\nggplot(df_plot, aes(x = date_onset, y = n)) +\n  geom_bar(stat = \"identity\", width = 1, fill = \"cornflowerblue\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](simll_files/figure-html/unnamed-chunk-6-1.svg){width=100%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"id\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"case_name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sex\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"date_onset\"],\"name\":[5],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"date_admission\"],\"name\":[6],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"outcome\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"date_outcome\"],\"name\":[8],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"date_first_contact\"],\"name\":[9],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"date_last_contact\"],\"name\":[10],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"district\"],\"name\":[11],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"jCQH5RSlVq\",\"3\":\"m\",\"4\":\"22\",\"5\":\"2023-01-01\",\"6\":\"<NA>\",\"7\":\"recovered\",\"8\":\"<NA>\",\"9\":\"<NA>\",\"10\":\"<NA>\",\"11\":\"Tan Binh\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"AdCD3im7sn\",\"3\":\"m\",\"4\":\"21\",\"5\":\"2023-01-08\",\"6\":\"<NA>\",\"7\":\"recovered\",\"8\":\"<NA>\",\"9\":\"2022-12-31\",\"10\":\"2023-01-04\",\"11\":\"Tan Phu\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"iDzmfZhFkV\",\"3\":\"m\",\"4\":\"21\",\"5\":\"2023-01-03\",\"6\":\"<NA>\",\"7\":\"recovered\",\"8\":\"<NA>\",\"9\":\"2022-12-29\",\"10\":\"2023-01-05\",\"11\":\"Binh Tan\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"sKipHJsjZ2\",\"3\":\"m\",\"4\":\"10\",\"5\":\"2023-01-10\",\"6\":\"<NA>\",\"7\":\"died\",\"8\":\"2023-01-27\",\"9\":\"2023-01-10\",\"10\":\"2023-01-13\",\"11\":\"Quan 10\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"xG7GvAjlBf\",\"3\":\"m\",\"4\":\"24\",\"5\":\"2023-01-05\",\"6\":\"<NA>\",\"7\":\"recovered\",\"8\":\"<NA>\",\"9\":\"2023-01-07\",\"10\":\"2023-01-07\",\"11\":\"Quan 12\",\"_rn_\":\"5\"},{\"1\":\"7\",\"2\":\"ZWWcBMLzoH\",\"3\":\"m\",\"4\":\"10\",\"5\":\"2023-01-04\",\"6\":\"<NA>\",\"7\":\"recovered\",\"8\":\"<NA>\",\"9\":\"2023-01-06\",\"10\":\"2023-01-07\",\"11\":\"Binh Thanh\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "simll_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}