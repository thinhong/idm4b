{
  "hash": "47224853f33c239328d7147261c69c12",
  "result": {
    "engine": "knitr",
    "markdown": "# Time-varying parameters\n\n[Source](https://stackoverflow.com/questions/67478946/in-r-fme-desolve-sir-fitting-time-varying-parameters)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bbmle)\nlibrary(deSolve)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(patchwork)\n```\n:::\n\n\nWe have a flu outbreak with 2 peaks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv(\"data/flu_inc_2p.csv\")\n\nggplot(df, aes(x = day, y = inc)) +\n  geom_point() +\n  labs(x = \"Day\", y = \"Incidence\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](tvar_files/figure-html/unnamed-chunk-2-1.svg){width=100%}\n:::\n:::\n\n\nLet fit a deterministic SEIR model and reuse the code from @lst-seir-det. We fit this using MLE assuming the incidence data is generated from a normal distribution.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nS0 <- 20000\nE0 <- 0\nI0 <- 1\nR0 <- 0\n\nmll <- function(beta, sigma, gamma, sd_inc) {\n  # Make sure that parameters are positive\n  beta <- exp(beta) \n  sigma <- exp(sigma)\n  gamma <- exp(gamma)\n  sd_inc <- exp(sd_inc)\n  \n  pred <- seir_mod(beta = beta, sigma = sigma, gamma = gamma, S0 = S0, E0 = E0, I0 = I0, R0 = R0, times = 0:(length(df$inc) - 1))\n  pred <- pred$Inc\n  # Return the negative log likelihood\n  - sum(dnorm(x = df$inc, mean = pred, sd = sd_inc, log = T))\n}\n\nstarting_param_val <- list(beta = 0.003, sigma = 0.5, gamma = 0.5, sd_inc = 3)\n\nestimates <- mle2(minuslogl = mll, start = lapply(starting_param_val, log), method = \"Nelder-Mead\")\n\nparams <- exp(coef(estimates))\nparams\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        beta        sigma        gamma       sd_inc \n4.253582e-04 2.159771e-02 2.046913e-01 8.918437e+01 \n```\n\n\n:::\n:::\n\n\nMLE will fit a curve going in the middle of the two peaks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred <- seir_mod(beta = params[1], sigma = params[2], gamma = params[3], S0 = S0, E0 = E0, I0 = I0, R0 = R0, times = df$day)\ndf_plot <- pred[,c(\"time\", \"Inc\")]\n\n# Compute 95% confidence interval\nlwr <- qnorm(p = 0.025, mean = pred$Inc, sd = params[4])\nupr <- qnorm(p = 0.975, mean = pred$Inc, sd = params[4])\n\nmy_palette <- brewer.pal(11, \"PuOr\")[c(10, 1, 4, 3, 8)]\n\nggplot(df_plot, aes(x = time, y = Inc)) +\n  geom_point(color = my_palette[3]) +\n  geom_line(color = my_palette[3]) +\n  geom_ribbon(aes(ymin = lwr, ymax = upr), fill = my_palette[3], alpha = 0.15) +\n  geom_point(data = df, aes(x = day, y = inc)) +\n  coord_cartesian(ylim = c(0, max(upr) + 10)) +\n  labs(x = \"Day\", y = \"Incidence\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](tvar_files/figure-html/unnamed-chunk-5-1.svg){width=100%}\n:::\n:::\n",
    "supporting": [
      "tvar_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}